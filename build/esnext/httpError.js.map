{"version":3,"file":"httpError.js","sourceRoot":"","sources":["../../src/httpError.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,MAAM,OAAO,SAAU,SAAQ,KAAK;IAGlC,YAAY,GAAW,EAAE,UAAkB,EAAE,YAAsB;QACjE,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF","sourcesContent":["/*\n * Copyright Fluidware srl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class HttpError extends Error {\n  statusCode: number;\n  httpResponse: Response;\n  constructor(msg: string, statusCode: number, httpResponse: Response) {\n    super(msg);\n    this.statusCode = statusCode;\n    this.httpResponse = httpResponse;\n  }\n\n  getStatusCode(): number {\n    return this.statusCode;\n  }\n\n  getHttpResponse(): Response {\n    return this.httpResponse;\n  }\n}\n"]}